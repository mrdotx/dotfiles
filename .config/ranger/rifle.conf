# path:   /home/klassiker/.local/share/repos/dotfiles/.config/ranger/rifle.conf
# author: klassiker [mrdotx]
# github: https://github.com/mrdotx/dotfiles
# date:   2021-07-07T08:47:13+0200

# Syntax:
#   <condition1> , <condition2> , ... = command

# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files

# If you use the special command "ask", rifle will ask you what program to run.

# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   env <variable> | The environment variable "variable" is non-empty
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | A graphical environment is available (darwin, Xorg, or Wayland)

# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.

# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
#   c | Only running the current file even if you have marked multiple files.
#     |   New command = $command $1

#-------------------------------------------
# Archives
#-------------------------------------------
# This requires compressor.sh
ext 7z|apk|arj|bz2|cab|cb7|cbr|cbt|cbz|chm|deb,   has compressor.sh = compressor.sh "$@"
ext dmg|epub|exe|gz|iso|lzh|lzma|msi|pkg|rar|rpm, has compressor.sh = compressor.sh "$@"
ext tar|tbz2|tgz|txz|udf|wim|xar|xz|z|zip|zst,    has compressor.sh = compressor.sh "$@"

#-------------------------------------------
# Websites
#-------------------------------------------
ext x?html?, has w3m,                        terminal = w3m.sh "$@"
ext x?html?, has surf,                      X, flag f = surf.sh file://"$@"
# ext x?html?, has qutebrowser,               X, flag f = qutebrowser "$@"
ext x?html?, has firefox-developer-edition, X, flag f = firefox-developer-edition "$@"

#-------------------------------------------
# Misc
#-------------------------------------------
# Define the "editor" for text files as first action
mime ^text,  label editor           = ${VISUAL:-$EDITOR} "$@"
mime ^text,  label pager            = "$PAGER" "$@"
mime ^text,  label sent, X, flag f  = sent "$@"
!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} "$@"
!mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" "$@"
!mime ^text, label sent,   ext xml|json|csv|tex|py|pl|rb|js|sh|php = sent "$@"

ext 1               = man "$1"
ext gpg|asc         = vim "$1"
name ^[mM]akefile$  = make

#--------------------------------------------
# Scripts
#-------------------------------------------
ext py  = python "$1"
ext pl  = perl "$1"
ext js  = node "$1"
ext sh  = sh "$1"
ext php = php "$1"

#--------------------------------------------
# Audio/Video
#-------------------------------------------
mime ^audio|ogg$, has mpv, terminal = mpv --no-audio-display "$@"

mime ^video, has mpv,  X, flag f    = mpv "$@"
mime ^video, has mpv, !X, terminal  = mpv "$@"

#-------------------------------------------
# Documents
#-------------------------------------------
ext pdf|djvu|epub|cbr|cbz, has zathura, X, flag f = zathura "$@"
ext sla,                   has scribus, X, flag f = scribus "$@"

ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoffice "$@"

#-------------------------------------------
# Images
#-------------------------------------------
mime ^image/svg, has inkscape, X, flag f = inkscape "$@"
mime ^image/svg, has display,  X, flag f = display "$@"

mime ^image, has sxiv, X, flag f = sxiv -q -a -s w "$@"
mime ^image, has gimp, X, flag f = gimp "$@"
ext xcf,               X, flag f = gimp "$@"

#-------------------------------------------
# Flag t fallback terminals
#-------------------------------------------
mime ^ranger/x-terminal-emulator, has urxvt = urxvtc.sh -e "$@"
mime ^ranger/x-terminal-emulator, has st    = st -e "$@"

#-------------------------------------------
# Misc
#-------------------------------------------
label exiftool, mime ^image, has exiftool, terminal = exiftool "$1" | "$PAGER"

#-------------------------------------------
# Editor for non-text files
#-------------------------------------------
              !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php = ask
label editor, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} "$@"
label pager,  !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" "$@"
label mcview, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php = mcview "$@"

######################################################################
# The actions below are left so low down in this file on purpose, so #
# they are never triggered accidentally.                             #
######################################################################

# Generic file opener as last action
label open, has xdg-open = xdg-open "$@"

# Execute a file as program/script.
mime application/x-executable = "$1"

# vim: ft=cfg
