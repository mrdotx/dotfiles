#!/bin/sh

# path:   /home/klassiker/.local/share/repos/dotfiles/.config/nsxiv/exec/key-handler
# author: klassiker [mrdotx]
# url:    https://github.com/mrdotx/dotfiles
# date:   2025-08-05T05:29:21+0200

realpaths() {
    while read -r file; do
        printf "%s " "$(realpath "$file")"
    done
}

transform() {
    while read -r file; do
        path=$(realpath "$file")
        case "$(file --brief --mime "$path")" in
            image/jpeg*)
                case "$1" in
                    horizontal | vertical)
                        jpegtran -flip "$1" -copy all -outfile "$path" "$path"
                        ;;
                    *)
                        jpegtran -rotate "$1" -copy all -outfile "$path" "$path"
                        ;;
                esac
                ;;
            *)
                case "$1" in
                    horizontal)
                        mogrify -flop "$path"
                        ;;
                    vertical)
                        mogrify -flip "$path"
                        ;;
                    *)
                        mogrify  -rotate "$1" "$path"
                        ;;
                esac
                ;;
        esac
    done
}

# keybindings (ctrl+x)
case "$1" in
    "d") # trash
        paths=$(realpaths)
        eval "trash-put $paths" \
            && notify-send \
                "nsxiv - moved to trash" \
                "$(printf "%s" "$paths" | tr ' ' '\n')" \
                --icon=messagebox_warning
        ;;
    "e") # exif
        paths=$(realpaths)
        $TERMINAL -T "nsxiv" -e sh -c "exiftool $paths | $PAGER" &
        ;;
    "g") # gimp
        paths=$(realpaths)
        eval "gimp $paths" &
        ;;
    "w") # wallpaper
        path=$(realpath "$(head -n1)")
        wallpaper.sh "$path" \
            && notify-send \
                "nsxiv - set as wallpaper" \
                "$path"
        ;;
    "comma")
        transform 270
        ;;
    "period")
        transform 90
        ;;
    "slash")
        transform 180
        ;;
    "semicolon")
        transform 'horizontal'
        ;;
    "apostrophe")
        transform 'vertical'
        ;;
esac
